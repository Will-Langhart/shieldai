name: 📦 Dependency Management

on:
  schedule:
    # Check for dependency updates weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of updates to check'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - security
        - patch
        - minor

env:
  NODE_VERSION: '20.x'

jobs:
  # Security Updates
  security-updates:
    name: 🔒 Security Updates
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'security' || github.event.inputs.update_type == 'all' || github.event_name == 'schedule'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Audit dependencies
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true
          
      - name: 🛠️ Fix security vulnerabilities
        run: |
          npm audit fix --force
          
      - name: 🔨 Test after security fixes
        run: |
          npm run build
          npm run lint
          
      - name: 📝 Create security update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: '🔒 Security: Fix security vulnerabilities'
          title: '🔒 Security: Automated security updates'
          body: |
            ## 🔒 Security Updates
            
            This PR contains automated security updates for vulnerable dependencies.
            
            ### Changes
            - Updated dependencies to fix security vulnerabilities
            - Ran `npm audit fix` to resolve issues
            
            ### Testing
            - ✅ Build passes
            - ✅ Linting passes
            
            **Please review the changes before merging.**
          branch: security/automated-updates
          delete-branch: true

  # Dependency Updates
  dependency-updates:
    name: 📈 Dependency Updates  
    runs-on: ubuntu-latest
    if: github.event.inputs.update_type == 'patch' || github.event.inputs.update_type == 'minor' || github.event.inputs.update_type == 'all' || github.event_name == 'schedule'
    
    strategy:
      matrix:
        update-type: [patch, minor]
        
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📈 Update ${{ matrix.update-type }} dependencies
        run: |
          # Install npm-check-updates
          npm install -g npm-check-updates
          
          # Update dependencies based on type
          if [ "${{ matrix.update-type }}" == "patch" ]; then
            ncu -u --target patch
          elif [ "${{ matrix.update-type }}" == "minor" ]; then
            ncu -u --target minor
          fi
          
          # Install updated dependencies
          npm install

      - name: 🔨 Test after updates
        run: |
          npm run build
          npm run lint
          
      - name: 📊 Generate update summary
        run: |
          echo "## 📈 ${{ matrix.update-type }} Dependency Updates" > update-summary.md
          echo "" >> update-summary.md
          echo "### Updated packages:" >> update-summary.md
          git diff HEAD~1 package.json | grep "+" | grep -v "+++" | sed 's/+/- /' >> update-summary.md || echo "No changes detected" >> update-summary.md

      - name: 📝 Create dependency update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: '📈 deps: Update ${{ matrix.update-type }} dependencies'
          title: '📈 Dependencies: Automated ${{ matrix.update-type }} updates'
          body-path: update-summary.md
          branch: dependencies/${{ matrix.update-type }}-updates
          delete-branch: true

  # Dependency Analysis
  dependency-analysis:
    name: 🔍 Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Analyze dependencies
        run: |
          # Install analysis tools
          npm install -g depcheck cost-of-modules bundle-phobia-cli
          
          # Check for unused dependencies
          echo "## Unused Dependencies" > analysis-report.md
          depcheck --json > depcheck-results.json
          
          # Analyze bundle size impact
          echo "## Bundle Size Analysis" >> analysis-report.md
          cost-of-modules --less >> analysis-report.md
          
          # Check for outdated dependencies
          echo "## Outdated Dependencies" >> analysis-report.md
          npm outdated >> analysis-report.md || true

      - name: 📊 Upload analysis results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-analysis
          path: |
            analysis-report.md
            depcheck-results.json

      - name: 💬 Comment analysis on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const report = fs.readFileSync('analysis-report.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 🔍 Dependency Analysis\n\n${report}`
              });
            } catch (error) {
              console.log('Analysis report not found, skipping comment');
            }

  # License Compliance
  license-check:
    name: ⚖️ License Compliance
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: ⚖️ Check licenses
        run: |
          # Install license checker
          npm install -g license-checker
          
          # Generate license report
          license-checker --json > licenses.json
          license-checker --csv > licenses.csv
          
          # Check for incompatible licenses
          license-checker --onlyAllow 'MIT;ISC;Apache-2.0;BSD-2-Clause;BSD-3-Clause;CC0-1.0;Unlicense' --failOn 'GPL;AGPL;LGPL;CPAL;EPL;MPL;CPOL;OFL;MS-PL;CC-BY-SA;SSPL'

      - name: 📊 Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            licenses.json
            licenses.csv

  # Vulnerability Scanning
  vulnerability-scan:
    name: 🛡️ Vulnerability Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Snyk vulnerability scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --json-file-output=snyk-results.json
        continue-on-error: true

      - name: 📊 Upload vulnerability results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnerability-scan-results
          path: snyk-results.json

      - name: 🛡️ OSSI vulnerability scan
        run: |
          # Alternative vulnerability scanning with npm audit
          npm audit --json > npm-audit-results.json || true
          
          # Check if there are high/critical vulnerabilities
          HIGH_VULNS=$(cat npm-audit-results.json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(cat npm-audit-results.json | jq '.metadata.vulnerabilities.critical // 0')
          
          echo "High vulnerabilities: $HIGH_VULNS"
          echo "Critical vulnerabilities: $CRITICAL_VULNS"
          
          if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "::warning::Found high or critical vulnerabilities"
            exit 1
          fi

  # Summary
  dependency-summary:
    name: 📋 Dependency Summary
    runs-on: ubuntu-latest
    needs: [security-updates, dependency-updates, dependency-analysis, license-check, vulnerability-scan]
    if: always()
    
    steps:
      - name: 📊 Generate summary
        uses: actions/github-script@v7
        with:
          script: |
            const results = {
              'Security Updates': '${{ needs.security-updates.result }}',
              'Dependency Updates': '${{ needs.dependency-updates.result }}',
              'Dependency Analysis': '${{ needs.dependency-analysis.result }}',
              'License Check': '${{ needs.license-check.result }}',
              'Vulnerability Scan': '${{ needs.vulnerability-scan.result }}'
            };
            
            let summary = '## 📦 Dependency Management Summary\n\n';
            
            for (const [check, result] of Object.entries(results)) {
              const emoji = result === 'success' ? '✅' : result === 'failure' ? '❌' : result === 'skipped' ? '⏭️' : '⚠️';
              summary += `- ${emoji} ${check}: ${result}\n`;
            }
            
            summary += '\n### Recommendations\n';
            summary += '- Review and merge security update PRs immediately\n';
            summary += '- Consider dependency updates for non-breaking changes\n';
            summary += '- Address any license compliance issues\n';
            summary += '- Fix critical and high severity vulnerabilities\n';
            
            core.summary.addRaw(summary);
            await core.summary.write();