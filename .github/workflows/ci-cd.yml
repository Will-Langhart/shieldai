name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # ============================================
  # 🧪 TEST JOB
  # ============================================
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm run test:ci || echo "No tests configured"

      - name: 🔍 Lint code
        run: npm run lint || echo "No linting configured"

  # ============================================
  # 🚀 PREVIEW DEPLOYMENT (dev branch)
  # ============================================
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Vercel CLI
        run: npm install -g vercel@latest

      - name: 🔄 Pull Vercel Environment
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Vercel (Preview)
        id: deploy
        run: |
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "deployment_url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT

      - name: 🔗 Comment Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 **Preview Deployment Ready!**\n\n🔗 **URL:** ${{ steps.deploy.outputs.deployment_url }}\n\n✅ This preview includes all changes from this PR.'
            })

  # ============================================
  # 🌟 PRODUCTION DEPLOYMENT (main branch)
  # ============================================
  deploy-production:
    name: 🌟 Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://shieldai-bice.vercel.app
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Vercel CLI
        run: npm install -g vercel@latest

      - name: 🔄 Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Vercel (Production)
        id: deploy
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "deployment_url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT

      - name: 🔍 Health Check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          curl -f https://shieldai-bice.vercel.app/api/health || exit 1
          echo "✅ Production deployment is healthy!"

      - name: 📢 Deployment Success
        run: |
          echo "🎉 Production deployment successful!"
          echo "🔗 URL: https://shieldai-bice.vercel.app"
          echo "📊 Deployment: ${{ steps.deploy.outputs.deployment_url }}"